package com.minh.product_service.command.interceptor;

import com.minh.product_service.command.commands.CreateProductCommand;
import com.minh.product_service.repository.ProductRepository;
import lombok.RequiredArgsConstructor;
import org.axonframework.commandhandling.CommandMessage;
import org.axonframework.messaging.MessageDispatchInterceptor;
import org.springframework.stereotype.Component;

import javax.annotation.Nonnull;
import java.util.List;
import java.util.function.BiFunction;

@Component
@RequiredArgsConstructor
public class ProductCommandInterceptor implements MessageDispatchInterceptor<CommandMessage<?>> {
  private final ProductRepository productRepository;

  @Nonnull
  @Override
  public BiFunction<Integer, CommandMessage<?>, CommandMessage<?>> handle(@Nonnull List<? extends CommandMessage<?>> messages) {
    return (index, command) -> {
      /// We don't need to check CreateProductCommand. This is because, the ID of new Product is not provided in Input. And when we receive the new ProductDTO we will create new ProductDTO and don't have to concern about the ID of ProductDTO. Because the new ID will be generated by the database.
      /// Another aspect is, we also won't have other fields to check.
      return command;
    };
  }
}
